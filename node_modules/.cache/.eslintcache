[{"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/index.js":"1","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/App.js":"2","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/reportWebVitals.js":"3","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/edit.js":"4","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Layout.js":"5","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/NoNote.js":"6","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/preview.js":"7","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Edit.js":"8","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Preview.js":"9"},{"size":323,"mtime":1678222463743,"results":"10","hashOfConfig":"11"},{"size":571,"mtime":1678256721089,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1678222463743,"results":"13","hashOfConfig":"11"},{"size":2554,"mtime":1678254563584,"results":"14","hashOfConfig":"11"},{"size":3604,"mtime":1678303516567,"results":"15","hashOfConfig":"11"},{"size":138,"mtime":1678238345149,"results":"16","hashOfConfig":"11"},{"size":1801,"mtime":1678254567094,"results":"17","hashOfConfig":"11"},{"size":2639,"mtime":1678301177228,"results":"18","hashOfConfig":"11"},{"size":1871,"mtime":1678300830419,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s4xs3s",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/index.js",[],[],"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/App.js",[],[],"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/reportWebVitals.js",[],[],"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/edit.js",["50","51","52","53","54","55"],[],"import { useState } from \"react\";\nimport { useOutletContext, useParams, useNavigate } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nfunction edit() {\n  const [sortedNotes, setNotes] = useOutletContext();\n  const { id } = useParams();\n  const note = sortedNotes.find((note) => note.id === id);\n  const [body, setBody] = useState(note.body);\n  const [when, setWhen] = useState(note.userDate);\n  const [title, setTitle] = useState(note.title);\n\n  const navigate = useNavigate(); // add this hook to use navigation\n\n  const onDeleteNote = (noteId) => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      setNotes(sortedNotes.filter(({ id }) => id !== noteId));\n      navigate(\"/\", { replace: true });\n    }\n  };\n\n  const onSaveNote = (title, body, when) => {\n    const note = sortedNotes.find((note) => note.id === id);\n    note.title = title;\n    note.body = body;\n    note.bodyPreview = body;\n    note.userDate = when;\n    localStorage.setItem(\"localNotes\", JSON.stringify(sortedNotes)); // update notes in local storage\n    navigate(`/preview/${note.id}`, { replace: true });\n  };\n\n  if (!note) {\n    return (\n      <div className=\"no-active-note\">Select a note or create a new one </div>\n    );\n  }\n\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <div id=\"mainbar-header\">\n          <h1 id=\"mainbar-title\">\n            <input\n              type=\"text\"\n              id=\"mainbar-title-input\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              autoFocus\n            />\n          </h1>\n          <div id=\"mainbar-buttons\">\n            <button\n              id=\"save_button\"\n              onClick={() => onSaveNote(title, body, when)}\n            >\n              save\n            </button>\n            <button id=\"delete_button\" onClick={() => onDeleteNote(note.id)}>\n              delete\n            </button>\n          </div>\n        </div>\n        <div id=\"mainbar-edit\">\n          <div id=\"date\">\n            <input\n              type=\"datetime-local\"\n              id=\"date\"\n              value={when}\n              onChange={(e) => {\n                setWhen(e.target.value);\n              }}\n            />\n          </div>\n\n          <div id=\"mainbar-content\">\n            <ReactQuill\n              theme=\"snow\"\n              value={body}\n              onChange={setBody}\n              defaultValue={note.body}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default edit;\n",[],"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Layout.js",["56"],[],"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/NoNote.js",[],[],"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/preview.js",["57","58","59","60","61","62"],[],"import React from \"react\";\nimport { useOutletContext, useParams, Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction preview() {\n  const { id } = useParams();\n  const [notesObjects, setNotes] = useOutletContext();\n  const navigate = useNavigate(); // hook to use navigation\n\n  const note = notesObjects.find((note) => note.ID === id);\n  if (!note) {\n    return <div className=\"noNoteFound\">Note not found</div>;\n  }\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  const onDeleteNote = (noteId) => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      setNotes(sortedNotes.filter(({ id }) => id !== noteId));\n    }\n  };\n\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <div id=\"mainbar-header\">\n          <h1 id=\"mainbar-title\">{note.Title}</h1>\n          <div id=\"mainbar-buttons\">\n            <Link key={note.ID} to={\"/EditNote/\" + note.ID}>\n              <button className=\"save_button\">Edit</button>\n            </Link>\n            <button\n              id=\"delete_button\"\n              onClick={(e) => onDeleteNote(activeNote.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n        <div id=\"mainbar-edit\">\n          <div id=\"date\">{formatDate(note.Date)}</div>\n\n          <div\n            id=\"mainbar-content\"\n            dangerouslySetInnerHTML={{ __html: note.noteContent }}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default preview;\n","/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Edit.js",[],[],"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Preview.js",["63"],[],{"ruleId":"64","severity":2,"message":"65","line":7,"column":35,"nodeType":"66","endLine":7,"endColumn":51},{"ruleId":"64","severity":2,"message":"67","line":8,"column":18,"nodeType":"66","endLine":8,"endColumn":27},{"ruleId":"64","severity":2,"message":"68","line":10,"column":27,"nodeType":"66","endLine":10,"endColumn":35},{"ruleId":"64","severity":2,"message":"68","line":11,"column":27,"nodeType":"66","endLine":11,"endColumn":35},{"ruleId":"64","severity":2,"message":"68","line":12,"column":29,"nodeType":"66","endLine":12,"endColumn":37},{"ruleId":"64","severity":2,"message":"69","line":14,"column":20,"nodeType":"66","endLine":14,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":38,"column":9,"nodeType":"66","messageId":"72","endLine":38,"endColumn":19},{"ruleId":"64","severity":2,"message":"73","line":6,"column":18,"nodeType":"66","endLine":6,"endColumn":27},{"ruleId":"64","severity":2,"message":"74","line":7,"column":36,"nodeType":"66","endLine":7,"endColumn":52},{"ruleId":"70","severity":1,"message":"75","line":8,"column":9,"nodeType":"66","messageId":"72","endLine":8,"endColumn":17},{"ruleId":"64","severity":2,"message":"76","line":8,"column":20,"nodeType":"66","endLine":8,"endColumn":31},{"ruleId":"77","severity":2,"message":"78","line":33,"column":16,"nodeType":"66","messageId":"79","endLine":33,"endColumn":27},{"ruleId":"77","severity":2,"message":"80","line":48,"column":44,"nodeType":"66","messageId":"79","endLine":48,"endColumn":54},{"ruleId":"70","severity":1,"message":"75","line":8,"column":9,"nodeType":"66","messageId":"72","endLine":8,"endColumn":17},"react-hooks/rules-of-hooks","React Hook \"useOutletContext\" is called in function \"edit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier","React Hook \"useParams\" is called in function \"edit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"edit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useNavigate\" is called in function \"edit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-unused-vars","'formatDate' is assigned a value but never used.","unusedVar","React Hook \"useParams\" is called in function \"preview\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useOutletContext\" is called in function \"preview\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'navigate' is assigned a value but never used.","React Hook \"useNavigate\" is called in function \"preview\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-undef","'sortedNotes' is not defined.","undef","'activeNote' is not defined."]