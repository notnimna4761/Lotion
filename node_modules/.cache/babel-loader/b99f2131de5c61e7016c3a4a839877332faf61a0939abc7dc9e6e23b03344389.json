{"ast":null,"code":"var _jsxFileName = \"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nimport Sidebar from \"./Sidebar.js\";\nimport Mainbar from \"./Mainbar.js\";\nimport Headbar from \"./Headbar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(null);\n  useEffect(() => {\n    // Retrieve notes from localStorage on mount\n    const storedNotes = localStorage.getItem(\"notes\");\n    if (storedNotes) {\n      setNotes(JSON.parse(storedNotes));\n    }\n  }, []);\n  useEffect(() => {\n    // Store notes to localStorage when notes state changes\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  const date = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", date);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"...\",\n      lastModified: Date.now().toLocaleString()\n    };\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n  const onDeleteNote = noteId => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      setNotes(notes.filter(_ref => {\n        let {\n          id\n        } = _ref;\n        return id !== noteId;\n      }));\n    }\n  };\n  const onUpdateNote = updatedNote => {\n    const updatedNotesArray = notes.map(note => {\n      if (note.id === activeNote.id) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n  const getActiveNote = () => {\n    return notes.find(note => note.id === activeNote);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Headbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        onAddNote: onAddNote,\n        activeNote: activeNote,\n        setActiveNote: setActiveNote,\n        onDeleteNote: onDeleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mainbar, {\n        formatDate: formatDate,\n        onDeleteNote: onDeleteNote,\n        activeNote: getActiveNote,\n        onUpdateNote: onUpdateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YG//eKXrHz9bicsSPlzehCw9/H8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","uuid","Sidebar","Mainbar","Headbar","jsxDEV","_jsxDEV","App","_s","notes","setNotes","activeNote","setActiveNote","storedNotes","localStorage","getItem","JSON","parse","setItem","stringify","date","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","onAddNote","newNote","id","title","body","lastModified","now","onDeleteNote","noteId","answer","window","confirm","filter","_ref","onUpdateNote","updatedNote","updatedNotesArray","map","note","getActiveNote","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nimport Sidebar from \"./Sidebar.js\";\nimport Mainbar from \"./Mainbar.js\";\nimport Headbar from \"./Headbar.js\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(null);\n\n  useEffect(() => {\n    // Retrieve notes from localStorage on mount\n    const storedNotes = localStorage.getItem(\"notes\");\n    if (storedNotes) {\n      setNotes(JSON.parse(storedNotes));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Store notes to localStorage when notes state changes\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const date = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", date);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"...\",\n      lastModified: Date.now().toLocaleString(),\n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      setNotes(notes.filter(({ id }) => id !== noteId));\n    }\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArray = notes.map((note) => {\n      if (note.id === activeNote.id) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n\n  const getActiveNote = () => {\n    return notes.find((note) => note.id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Headbar />\n      <div id=\"container\">\n        <Sidebar\n          notes={notes}\n          onAddNote={onAddNote}\n          activeNote={activeNote}\n          setActiveNote={setActiveNote}\n          onDeleteNote={onDeleteNote}\n        />\n        <Mainbar\n          formatDate={formatDate}\n          onDeleteNote={onDeleteNote}\n          activeNote={getActiveNote}\n          onUpdateNote={onUpdateNote}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}