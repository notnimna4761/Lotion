{"ast":null,"code":"var _jsxFileName = \"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Mainbar.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = _ref => {\n  _s();\n  let {\n    activeNote,\n    onUpdateNote,\n    onDeleteNote,\n    formatDate\n  } = _ref;\n  const quill = useRef();\n  function getCurrentDateTime() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    const timezoneOffset = now.getTimezoneOffset() / -60;\n    const timezoneOffsetFormatted = String(timezoneOffset).padStart(2, \"0\");\n    const datetime = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}-${timezoneOffsetFormatted}:00`;\n    return datetime;\n  }\n  console.log(getCurrentDateTime());\n  const onEditField = (field, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [field]: value,\n      lastModified: Date.now()\n    });\n    onUpdateNote(newNote);\n  };\n  const onSaveNote = (field, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [field]: value,\n      lastModified: Date.now()\n    });\n  };\n  if (!activeNote) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-active-note\",\n    children: \"Select a note or create a new one \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-main-note-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mainbar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"mainbar-title\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"mainbar-title-input\",\n            value: activeNote.title,\n            onChange: e => {\n              onEditField(\"title\", e.target.value);\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mainbar-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save_button\",\n            onClick: () => onSaveNote(\"body\", quill.current.getEditor().getText()),\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"delete_button\",\n            onClick: e => onDeleteNote(activeNote.id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"date\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          id: \"date\",\n          value: new Date(activeNote.lastModified).toISOString().slice(0, -8),\n          onChange: e => {\n            const newDate = new Date(e.target.value);\n            const timestamp = newDate.getTime();\n            onEditField(\"lastModified\", timestamp);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mainbar-content\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          ref: quill,\n          theme: \"snow\",\n          value: activeNote.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"FlphuJKkhdrux8XGc1J5b56P2Is=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useRef","ReactQuill","jsxDEV","_jsxDEV","Main","_ref","_s","activeNote","onUpdateNote","onDeleteNote","formatDate","quill","getCurrentDateTime","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","timezoneOffset","getTimezoneOffset","timezoneOffsetFormatted","datetime","console","log","onEditField","field","value","lastModified","newNote","onSaveNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","title","onChange","e","target","autoFocus","onClick","current","getEditor","getText","toISOString","slice","newDate","timestamp","getTime","ref","theme","body","_c","$RefreshReg$"],"sources":["/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/Mainbar.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst Main = ({ activeNote, onUpdateNote, onDeleteNote, formatDate }) => {\n  const quill = useRef();\n\n  function getCurrentDateTime() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    const timezoneOffset = now.getTimezoneOffset() / -60;\n    const timezoneOffsetFormatted = String(timezoneOffset).padStart(2, \"0\");\n    const datetime = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}-${timezoneOffsetFormatted}:00`;\n    return datetime;\n  }\n  console.log(getCurrentDateTime());\n\n  const onEditField = (field, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [field]: value,\n      lastModified: Date.now(),\n    });\n    onUpdateNote(newNote);\n  };\n\n  const onSaveNote = (field, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [field]: value,\n      lastModified: Date.now(),\n    });\n  };\n\n  if (!activeNote)\n    return (\n      <div className=\"no-active-note\">Select a note or create a new one </div>\n    );\n\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <div id=\"mainbar-header\">\n          <h1 id=\"mainbar-title\">\n            <input\n              type=\"text\"\n              id=\"mainbar-title-input\"\n              value={activeNote.title}\n              onChange={(e) => {\n                onEditField(\"title\", e.target.value);\n              }}\n              autoFocus\n            />\n          </h1>\n          <div id=\"mainbar-buttons\">\n            <button\n              id=\"save_button\"\n              onClick={() =>\n                onSaveNote(\"body\", quill.current.getEditor().getText())\n              }\n            >\n              save\n            </button>\n            <button\n              id=\"delete_button\"\n              onClick={(e) => onDeleteNote(activeNote.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n\n        <div id=\"date\">\n          <input\n            type=\"datetime-local\"\n            id=\"date\"\n            value={new Date(activeNote.lastModified).toISOString().slice(0, -8)}\n            onChange={(e) => {\n              const newDate = new Date(e.target.value);\n              const timestamp = newDate.getTime();\n              onEditField(\"lastModified\", timestamp);\n            }}\n          />\n        </div>\n\n        <div id=\"mainbar-content\">\n          <ReactQuill ref={quill} theme=\"snow\" value={activeNote.body} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}