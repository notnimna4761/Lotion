{"ast":null,"code":"var _jsxFileName = \"/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Sidebar from \"./Sidebar.js\";\nimport Mainbar from \"./Mainbar.js\";\nimport Headbar from \"./Headbar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n  const date = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", date);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const onAddNote = () => {\n    const newNote = {\n      id: uuidv4(),\n      title: \"Untitled Note\",\n      body: \"...\",\n      lastModified: Date.now().toLocaleString()\n    };\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n  const onDeleteNote = noteId => {\n    setNotes(notes.filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return id !== noteId;\n    }));\n  };\n  const onUpdateNote = updatedNote => {\n    const updatedNotesArray = notes.map(note => {\n      if (note.id === activeNote.id) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n  const getActiveNote = () => {\n    var selected_note = notes.find(note => note.id === activeNote);\n    return selected_note;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Headbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        onAddNote: onAddNote,\n        activeNote: activeNote,\n        setActiveNote: setActiveNote,\n        onDeleteNote: onDeleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mainbar, {\n        formatDate: formatDate,\n        onDeleteNote: onDeleteNote,\n        activeNote: getActiveNote(),\n        onUpdateNote: onUpdateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gB5omx9RPH1kLpQQ78qO3OWf5pg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","v4","uuidv4","Sidebar","Mainbar","Headbar","jsxDEV","_jsxDEV","App","_s","notes","setNotes","activeNote","setActiveNote","date","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","onAddNote","newNote","id","title","body","lastModified","now","onDeleteNote","noteId","filter","_ref","onUpdateNote","updatedNote","updatedNotesArray","map","note","getActiveNote","selected_note","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nimna/Desktop/Winter/ENSF_381/week6/Lotion/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Sidebar from \"./Sidebar.js\";\nimport Mainbar from \"./Mainbar.js\";\nimport Headbar from \"./Headbar.js\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [activeNote, setActiveNote] = useState(false);\n\n  const date = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", date);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuidv4(),\n      title: \"Untitled Note\",\n      body: \"...\",\n      lastModified: Date.now().toLocaleString(),\n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArray = notes.map((note) => {\n      if (note.id === activeNote.id) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n\n  const getActiveNote = () => {\n    var selected_note = notes.find((note) => note.id === activeNote);\n    return selected_note;\n  };\n\n  return (\n    <div className=\"App\">\n      <Headbar />\n      <div id=\"container\">\n        <Sidebar\n          notes={notes}\n          onAddNote={onAddNote}\n          activeNote={activeNote}\n          setActiveNote={setActiveNote}\n          onDeleteNote={onDeleteNote}\n        />\n        <Mainbar\n          formatDate={formatDate}\n          onDeleteNote={onDeleteNote}\n          activeNote={getActiveNote()}\n          onUpdateNote={onUpdateNote}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}